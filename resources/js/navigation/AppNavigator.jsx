 import React from 'react'; import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom'; // Admin Components import AdminDashboard from '../admin/screens/AdminDashboard'; import HotelBookingScreen from '../admin/screens/HotelBookingScreen'; import AdminHeader from '../admin/components/AdminHeader'; import StatsOverview from '../admin/components/StatsOverview'; // User Components import UserPortal from '../components/UserPortal'; import UserProfile from '../components/UserProfile'; // Hotel Components import HotelHeader from '../components/Hotel/HotelHeader'; import HotelServices from '../components/Hotel/HotelServices'; import SmartRoomControl from '../components/Hotel/SmartRoomControl'; import VirtualConcierge from '../components/Hotel/VirtualConcierge'; const AppNavigator = () => { const isAuthenticated = !!window.Laravel.user; const isAdmin = window.Laravel.isAdmin; const PrivateRoute = ({ children, requireAdmin = false }) => { if (!isAuthenticated) return <Navigate to="/login" />; if (requireAdmin && !isAdmin) return <Navigate to="/unauthorized" />; return children; }; return ( <Router> <Routes> {/* Admin Routes */} <Route path="/admin" element={ <PrivateRoute requireAdmin> <AdminHeader /> <AdminDashboard /> </PrivateRoute> } /> <Route path="/admin/bookings" element={ <PrivateRoute requireAdmin> <AdminHeader /> <HotelBookingScreen /> </PrivateRoute> } /> <Route path="/admin/stats" element={ <PrivateRoute requireAdmin> <AdminHeader /> <StatsOverview /> </PrivateRoute> } /> {/* User Routes */} <Route path="/portal" element={ <PrivateRoute> <HotelHeader /> <UserPortal /> </PrivateRoute> } /> <Route path="/profile" element={ <PrivateRoute> <HotelHeader /> <UserProfile /> </PrivateRoute> } /> {/* Hotel Service Routes */} <Route path="/services" element={ <PrivateRoute> <HotelHeader /> <HotelServices /> </PrivateRoute> } /> <Route path="/smart-room" element={ <PrivateRoute> <HotelHeader /> <SmartRoomControl /> </PrivateRoute> } /> <Route path="/concierge" element={ <PrivateRoute> <HotelHeader /> <VirtualConcierge /> </PrivateRoute> } /> {/* Public Routes */} <Route path="/login" element={<Navigate to="/" />} /> <Route path="/" element={<UserPortal />} /> {/* Fallback Route */} <Route path="*" element={<Navigate to="/" replace />} /> </Routes> </Router> ); }; export default AppNavigator; 