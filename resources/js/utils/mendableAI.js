import { MendableClient } from '@mendable/search'; class MendableAI { constructor() { this.client = new MendableClient({ apiKey: process.env.MENDABLE_API_KEY, }); } async getRecommendations(userPreferences) { try { const response = await this.client.query({ query: this.buildRecommendationQuery(userPreferences), }); return response.data; } catch (error) { console.error('Mendable AI Error:', error); return null; } } async getSmartRoomSuggestions(roomData) { try { const response = await this.client.query({ query: this.buildSmartRoomQuery(roomData), }); return response.data; } catch (error) { console.error('Smart Room AI Error:', error); return null; } } async getVirtualConciergeResponse(userQuery) { try { const response = await this.client.query({ query: userQuery, }); return response.data; } catch (error) { console.error('Virtual Concierge Error:', error); return null; } } buildRecommendationQuery(preferences) { return `Recommend hotel rooms and services based on: ${JSON.stringify(preferences)}`; } buildSmartRoomQuery(roomData) { return `Optimize room settings based on: ${JSON.stringify(roomData)}`; } } export const mendableAI = new MendableAI();